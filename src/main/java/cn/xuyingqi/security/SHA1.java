package cn.xuyingqi.security;

import java.security.MessageDigest;

/**
 * SHA1加密算法
 * 
 * @author XuYQ
 *
 */
public class SHA1 {

	/**
	 * 加密
	 * 
	 * @param data
	 *            加密数据
	 * @param digest
	 *            摘要
	 * @return
	 */
	public static final byte[] encrypt(byte[] data, byte[] digest) {

		if (data.length == 0) {

			return null;
		}

		try {

			MessageDigest md = MessageDigest.getInstance("SHA1");
			md.update(data);

			byte[] mdd = md.digest();
			byte[] sha1 = new byte[mdd.length * 2];
			int k = 0;
			for (int i = 0; i < mdd.length; i++) {

				byte byte0 = mdd[i];
				sha1[k++] = digest[byte0 >>> 4 & 0xf];
				sha1[k++] = digest[byte0 & 0xf];
			}

			return sha1;
		} catch (Exception e) {

			return null;
		}
	}

	/**
	 * Main函数测试
	 * 
	 * @param args
	 */
	public static void main(String[] args) {

		StringBuffer sb = new StringBuffer();
		sb.append(
				"<?xml version=\"1.0\" encoding=\"UTF-8\"?><wxlifepay><head><err_msg/><merchantid>1480786242</merchantid><ret_code>0</ret_code><trancode>querycallback</trancode><transeqnum>1</transeqnum><version/></head><info><bill_key>1</bill_key><company_id>1480786242</company_id><data><attach/><balance>0</balance><begin_date null=\"true\"/><customer_name>菏泽测试用户22</customer_name><end_date null=\"true\"/><pay_amount>678</pay_amount></data><total_num>1</total_num></info></wxlifepay>");
		sb.append("hezekunlunranqi");

		System.out.println(new String(SHA1.encrypt(sb.toString().getBytes(), "0123456789abcdef".getBytes())));

		byte[] a = new byte[] { 60, 63, 120, 109, 108, 32, 118, 101, 114, 115, 105, 111, 110, 61, 34, 49, 46, 48, 34,
				32, 101, 110, 99, 111, 100, 105, 110, 103, 61, 34, 85, 84, 70, 45, 56, 34, 63, 62, 60, 119, 120, 108,
				105, 102, 101, 112, 97, 121, 62, 60, 104, 101, 97, 100, 62, 60, 101, 114, 114, 95, 109, 115, 103, 47,
				62, 60, 109, 101, 114, 99, 104, 97, 110, 116, 105, 100, 62, 49, 52, 56, 48, 55, 56, 54, 50, 52, 50, 60,
				47, 109, 101, 114, 99, 104, 97, 110, 116, 105, 100, 62, 60, 114, 101, 116, 95, 99, 111, 100, 101, 62,
				48, 60, 47, 114, 101, 116, 95, 99, 111, 100, 101, 62, 60, 116, 114, 97, 110, 99, 111, 100, 101, 62, 113,
				117, 101, 114, 121, 99, 97, 108, 108, 98, 97, 99, 107, 60, 47, 116, 114, 97, 110, 99, 111, 100, 101, 62,
				60, 116, 114, 97, 110, 115, 101, 113, 110, 117, 109, 62, 49, 60, 47, 116, 114, 97, 110, 115, 101, 113,
				110, 117, 109, 62, 60, 118, 101, 114, 115, 105, 111, 110, 47, 62, 60, 47, 104, 101, 97, 100, 62, 60,
				105, 110, 102, 111, 62, 60, 98, 105, 108, 108, 95, 107, 101, 121, 62, 49, 60, 47, 98, 105, 108, 108, 95,
				107, 101, 121, 62, 60, 99, 111, 109, 112, 97, 110, 121, 95, 105, 100, 62, 49, 52, 56, 48, 55, 56, 54,
				50, 52, 50, 60, 47, 99, 111, 109, 112, 97, 110, 121, 95, 105, 100, 62, 60, 100, 97, 116, 97, 62, 60, 97,
				116, 116, 97, 99, 104, 47, 62, 60, 98, 97, 108, 97, 110, 99, 101, 62, 48, 60, 47, 98, 97, 108, 97, 110,
				99, 101, 62, 60, 98, 101, 103, 105, 110, 95, 100, 97, 116, 101, 32, 110, 117, 108, 108, 61, 34, 116,
				114, 117, 101, 34, 47, 62, 60, 99, 117, 115, 116, 111, 109, 101, 114, 95, 110, 97, 109, 101, 62, -70,
				-54, -44, -13, -78, -30, -54, -44, -45, -61, -69, -89, 50, 50, 60, 47, 99, 117, 115, 116, 111, 109, 101,
				114, 95, 110, 97, 109, 101, 62, 60, 101, 110, 100, 95, 100, 97, 116, 101, 32, 110, 117, 108, 108, 61,
				34, 116, 114, 117, 101, 34, 47, 62, 60, 112, 97, 121, 95, 97, 109, 111, 117, 110, 116, 62, 54, 55, 56,
				60, 47, 112, 97, 121, 95, 97, 109, 111, 117, 110, 116, 62, 60, 47, 100, 97, 116, 97, 62, 60, 116, 111,
				116, 97, 108, 95, 110, 117, 109, 62, 49, 60, 47, 116, 111, 116, 97, 108, 95, 110, 117, 109, 62, 60, 47,
				105, 110, 102, 111, 62, 60, 47, 119, 120, 108, 105, 102, 101, 112, 97, 121, 62, 104, 101, 122, 101, 107,
				117, 110, 108, 117, 110, 114, 97, 110, 113, 105 };
		byte[] b = new byte[] { 60, 63, 120, 109, 108, 32, 118, 101, 114, 115, 105, 111, 110, 61, 34, 49, 46, 48, 34,
				32, 101, 110, 99, 111, 100, 105, 110, 103, 61, 34, 85, 84, 70, 45, 56, 34, 63, 62, 60, 119, 120, 108,
				105, 102, 101, 112, 97, 121, 62, 60, 104, 101, 97, 100, 62, 60, 101, 114, 114, 95, 109, 115, 103, 47,
				62, 60, 109, 101, 114, 99, 104, 97, 110, 116, 105, 100, 62, 49, 52, 56, 48, 55, 56, 54, 50, 52, 50, 60,
				47, 109, 101, 114, 99, 104, 97, 110, 116, 105, 100, 62, 60, 114, 101, 116, 95, 99, 111, 100, 101, 62,
				48, 60, 47, 114, 101, 116, 95, 99, 111, 100, 101, 62, 60, 116, 114, 97, 110, 99, 111, 100, 101, 62, 113,
				117, 101, 114, 121, 99, 97, 108, 108, 98, 97, 99, 107, 60, 47, 116, 114, 97, 110, 99, 111, 100, 101, 62,
				60, 116, 114, 97, 110, 115, 101, 113, 110, 117, 109, 62, 49, 60, 47, 116, 114, 97, 110, 115, 101, 113,
				110, 117, 109, 62, 60, 118, 101, 114, 115, 105, 111, 110, 47, 62, 60, 47, 104, 101, 97, 100, 62, 60,
				105, 110, 102, 111, 62, 60, 98, 105, 108, 108, 95, 107, 101, 121, 62, 49, 60, 47, 98, 105, 108, 108, 95,
				107, 101, 121, 62, 60, 99, 111, 109, 112, 97, 110, 121, 95, 105, 100, 62, 49, 52, 56, 48, 55, 56, 54,
				50, 52, 50, 60, 47, 99, 111, 109, 112, 97, 110, 121, 95, 105, 100, 62, 60, 100, 97, 116, 97, 62, 60, 97,
				116, 116, 97, 99, 104, 47, 62, 60, 98, 97, 108, 97, 110, 99, 101, 62, 48, 60, 47, 98, 97, 108, 97, 110,
				99, 101, 62, 60, 98, 101, 103, 105, 110, 95, 100, 97, 116, 101, 32, 110, 117, 108, 108, 61, 34, 116,
				114, 117, 101, 34, 47, 62, 60, 99, 117, 115, 116, 111, 109, 101, 114, 95, 110, 97, 109, 101, 62, -24,
				-113, -113, -26, -77, -67, -26, -75, -117, -24, -81, -107, -25, -108, -88, -26, -120, -73, 50, 50, 60,
				47, 99, 117, 115, 116, 111, 109, 101, 114, 95, 110, 97, 109, 101, 62, 60, 101, 110, 100, 95, 100, 97,
				116, 101, 32, 110, 117, 108, 108, 61, 34, 116, 114, 117, 101, 34, 47, 62, 60, 112, 97, 121, 95, 97, 109,
				111, 117, 110, 116, 62, 54, 55, 56, 60, 47, 112, 97, 121, 95, 97, 109, 111, 117, 110, 116, 62, 60, 47,
				100, 97, 116, 97, 62, 60, 116, 111, 116, 97, 108, 95, 110, 117, 109, 62, 49, 60, 47, 116, 111, 116, 97,
				108, 95, 110, 117, 109, 62, 60, 47, 105, 110, 102, 111, 62, 60, 47, 119, 120, 108, 105, 102, 101, 112,
				97, 121, 62, 104, 101, 122, 101, 107, 117, 110, 108, 117, 110, 114, 97, 110, 113, 105 };

		System.out.println(new String(a));
		System.out.println(new String(b));
	}
}